plugins {
    id 'java'
}

group 'com.example'
version '1.0-SNAPSHOT'

sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.32'
}

jar {
    manifest {
        attributes 'Main-Class': ''
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

configurations {
    aspectpath
}

sourceSets.main.java {
    srcDirs += [file("$buildDir/generated/sources/aspectj").absolutePath]
}

task compileAspect(type: JavaCompile) {
    sourceCompatibility = '11'
    targetCompatibility = '11'
    classpath = configurations.compileClasspath
    destinationDir = file("$buildDir/classes/java/main")
    options.compilerArgs = [
            '-Xlint:deprecation',
            '-Xlint:unchecked',
            '-Xlint:path',
            "-showWeaveInfo",
            "-verbose",
            "-aspectpath", configurations.aspectpath.getAsPath(),
            "-cp", sourceSets.main.runtimeClasspath.getAsPath()
    ]
    doLast {
        sourceSets.main.java.srcDirs += [file("$buildDir/generated/sources/aspectj").absolutePath]
    }
//    dependencies {
//        implementation 'org.aspectj:aspectjrt:1.9.7'
//    }
}


task aspectJar(type: Jar) {
    from sourceSets.main.output
    from configurations.aspectpath
    archiveClassifier = 'aspect'
}

artifacts {
    aspectJar
}

compileJava {
    dependsOn compileAspect
    sourceSets.main.java.srcDirs += "${buildDir}/generated-sources/aspectj"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        aspect {
            java {
                srcDirs = ['src/main/aspect']
            }
        }
    }
}
